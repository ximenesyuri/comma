#! /bin/bash

function comma {
    source ${BASH_SOURCE%/*}/sh/core/envs.sh
    source ${BASH_SOURCE%/*}/sh/core/theme.sh
    source ${BASH_SOURCE%/*}/sh/core/log.sh
    source ${BASH_SOURCE%/*}/sh/core/utils.sh
    source ${BASH_SOURCE%/*}/sh/core/help.sh
    source ${BASH_SOURCE%/*}/sh/core/api.sh

    declare -a OBJ_=("local" "cat")
    for obj in ${OBJ_[@]}; do
        eval "MAIN_${obj^^}=${BASH_SOURCE%/*}/sh/$obj/$obj.sh"
    done 

    declare -A OBJ_ALIASES=(
        [local]="l loc locs locals"
        [cat]="c cats catalog catalogs"
    ) 
    
    deps_ || return 1

    if [[ -z "$1" ]]; then
        help_
        return 0
    fi

    if [[ "$1" == "help" ]] ||
       [[ "$1" == "-h" ]] ||
       [[ "$1" == "--help" ]] && 
       [[ -z "$2" ]]; then
        help_
        return 0
    fi
    local match_obj=""
    for obj in ${OBJ_[@]}; do
        declare -a aliases=(${OBJ_ALIASES[$obj]})
        for alias in "${aliases[@]}"; do
            if [[ "${alias}" == "$1" ]] ||
               [[ "$1" == "$obj" ]]; then
                match_obj="true"
                shift 
                "${obj}_" "$@"
                if [[ ! "$?" == "0" ]]; then
                    return 1
                fi
                return 0
            fi
        done
    done 
    match_proj=""
    for proj in "${CAT_PROJS[@]}"; do
        if [[ "$proj" == "$1" ]]; then
            match_proj="true"
            source "${BASH_SOURCE%/*}/sh/proj/proj.sh"
            proj_ "$@"
            if [[ ! "$?" == "0" ]]; then
                return 1
            fi
            return 0
        fi
    done

    if [[ -z "$match_obj" ]] &&
       [[ -z "$match_proj" ]]; then
        error_ "$1" is not a valid option.
        info_ "Syntax: 'comma [loc/cat/proj] [action/service]'"
        return 1
    fi
}

