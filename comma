#! /bin/bash

function comma {
    source ${BASH_SOURCE%/*}/sh/core/envs.sh
    source ${BASH_SOURCE%/*}/sh/core/theme.sh
    source ${BASH_SOURCE%/*}/sh/core/log.sh
    source ${BASH_SOURCE%/*}/sh/core/utils.sh
    source ${BASH_SOURCE%/*}/sh/core/help.sh
    source ${BASH_SOURCE%/*}/sh/core/api.sh

    declare -a SCOPE_=("local" "cat" "proj")
    for scope in ${SCOPE_[@]}; do
        eval "MAIN_${scope^^}=${BASH_SOURCE%/*}/sh/$scope/$scope.sh"
    done 

    declare -A SCOPE_ALIASES=(
        [local]="l loc locs locals"
        [cat]="c cats catalog catalogs"
        [proj]="p prj prjs projs project projects"
    ) 
    

    DEPS_=("curl" "fzf" "yq" "jq")
    deps_ || return 1

    if [[ -z "$1" ]]; then
        help_
        return 0
    fi

    if [[ "$1" == "help" ]] ||
       [[ "$1" == "-h" ]] ||
       [[ "$1" == "--help" ]] && 
       [[ -z "$2" ]]; then
        help_
        return 0
    fi
    local match_scope=""
    for scope in ${SCOPE_[@]}; do
        declare -a aliases=(${SCOPE_ALIASES[$scope]})
        for alias in "${aliases[@]}"; do
            if [[ "${alias}" == "$1" ]] ||
               [[ "$1" == "$scope" ]]; then
                match_scope="true"              
                src_scope="MAIN_${scope^^}"
                shift
                source ${!src_scope}
                "${scope}_" "$@"
                if [[ ! "$?" == "0" ]]; then
                    return 1
                fi
                return 0
            fi
        done
    done

    if [[ -z "$match_scope" ]]; then
        error_ "'$1' is not a valid scope."
        info_ "Scopes: ${SCOPE_[*]}"
        return 1
    fi
}

