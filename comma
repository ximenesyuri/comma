#! /bin/bash

function comma {
    source ${BASH_SOURCE%/*}/sh/core/envs.sh
    source ${BASH_SOURCE%/*}/sh/core/theme.sh
    source ${BASH_SOURCE%/*}/sh/core/log.sh
    source ${BASH_SOURCE%/*}/sh/core/utils.sh
    source ${BASH_SOURCE%/*}/sh/core/help.sh
    source ${BASH_SOURCE%/*}/sh/core/api.sh

    declare -a OBJ_=("proj" "prov" "pipe" "hook")
    for obj in ${OBJ_[@]}; do
        eval "MAIN_${obj^^}=${BASH_SOURCE%/*}/sh/objs/$obj/$obj.sh"
        eval "ACT_${obj^^}=${BASH_SOURCE%/*}/sh/objs/$obj/act.sh"
    done
    
    if [[ -n "${G_DEFAULT_OBJECT}" ]]; then
        if [[ ${OBJ_[@]} =~ "${G_DEFAULT_OBJECT}" ]]; then
            local DEFAULT_OBJ=${G_DEFAULT_OBJECT}
        else
            error_ "Error in env 'G_DEFAULT_OBJECT': '$G_DEFAULT_OBJECT' is not a valid object."
            return 1
        fi
    else
       local DEFAULT_OBJ="proj"
    fi
    
    declare -A OBJ_ALIASES=(
        [proj]="p pj prj project projects"
        [prov]="P pv pvd prv provider providers"
        [pipe]="pp pipeline pipelines"
        [hook]="h hk hooks"
    )

    declare -a ACT_=(list new remove edit info help)

    declare -A ACT_ALIASES=(
        [list]="l ls"
        [new]="n c create"
        [remove]="r rm d del delete"
        [info]="i"
        [edit]="e ed"
        [help]="h --help -h"
    )
    
    deps_ || return 1

    if [[ -z "$1" ]]; then
        help_
        return 0
    fi

    if [[ "$1" == "help" ]] ||
       [[ "$1" == "-h" ]] ||
       [[ "$1" == "--help" ]] && 
       [[ -z "$2" ]]; then
        help_
        return 0
    fi 

    for act in ${ACT_[@]}; do
        declare -a aliases=(${ACT_ALIASES[$act]})
        local match_act=0
        if [[ "${aliases[@]}" =~ "$1" ]] ||
           [[ "$1" == "$act" ]]; then
            if [[ -z "$2" ]]; then
                shift 1
                local act_="ACT_${DEFAULT_OBJ^^}"
                "${act}"_"${DEFAULT_OBJ}" "$@"
                if [[ ! "$?" == "0" ]]; then
                    return 1
                fi
                return 0
            else
                local match_obj=0
                for obj in ${OBJ_[@]}; do
                    local aliases=(${OBJ_ALIASES[$obj]})
                    if [[ "${aliases[@]}" =~ "$2" ]] ||
                       [[ "$2" == "obj" ]]; then
                        shift 2
                        local act_="ACT_${obj^^}"
                        source ${!act_}
                        "${act}"_"${obj}" "$@"
                        if [[ ! "$?" == "0" ]]; then
                            return 1
                        fi
                        return 0
                    fi
                done
            fi
            if [[ $match_obj -eq 0 ]]; then
                error_ "Available objects: ${OBJ_[*]}"
                return 1
            fi 
        fi
    done

    projs=($(get_ projects))

    if [[ "${projs[@]}" =~ "$1" ]]; then
        local main_=MAIN_PROJ
        source ${!main_}
        proj_ "$@"
    else 
        error_ "Available actions: ${ACT_[*]}"
        error_ "Available projects: ${projs[*]}"
        return 1
    fi    
}

