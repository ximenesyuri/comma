github:
  version: v3
  base_url: https://api.github.com
  issues:
    list:
      method: GET
      endpoint: repos/:repo/issues
    create:
      method: POST
      endpoint: repos/:repo/issues
    update:
      method: PATCH
      endpoint: repos/:repo/issues/:issue_number
    comments:
      list:
        method: GET
        endpoint: repos/:repo/issues/:issue_number/comments
      create:
        method: POST
        endpoint: repos/:repo/issues/:issue_number/comments
      edit:
        method: PATCH
        endpoint: repos/:repo/issues/comments/:comment_id
      delete:
        method: DELETE
        endpoint: repos/:repo/issues/comments/:comment_id
  labels:
    list:
      method: GET
      endpoint: repos/:repo/labels
    create:
      method: POST
      endpoint: repos/:repo/labels
    delete:
      method: DELETE
      endpoint: repos/:repo/labels/:name
  prs:
    list:
      method: GET
      endpoint: repos/:repo/pulls
    create:
      method: POST
      endpoint: repos/:repo/pulls
    update:
      method: PATCH
      endpoint: repos/:repo/pulls/:number
    approve:
      method: POST
      endpoint: repos/:repo/pulls/:number/reviews
      body:
        event: "APPROVE"
    disapprove:
      method: POST
      endpoint: repos/:repo/pulls/:number/reviews
      body:
        event: "REQUEST_CHANGES"
    comments:
      list:
        method: GET
        endpoint: repos/:repo/pulls/:pull_number/comments
      create:
        method: POST
        endpoint: repos/:repo/pulls/:pull_number/comments
      edit:
        method: PATCH
        endpoint: repos/:repo/pulls/comments/:comment_id
      delete:
        method: DELETE
        endpoint: repos/:repo/pulls/comments/:comment_id

gitlab:
  version: v4
  base_url: https://gitlab.com/api/v4
  issues:
    list:
      method: GET
      endpoint: projects/:repo/issues
    create:
      method: POST
      endpoint: projects/:repo/issues
    update:
      method: PUT
      endpoint: projects/:repo/issues/:issue_id
    comments:
      list:
        method: GET
        endpoint: projects/:repo/issues/:issue_id/notes
      create:
        method: POST
        endpoint: projects/:repo/issues/:issue_id/notes
      edit:
        method: PUT
        endpoint: projects/:repo/issues/:issue_id/notes/:note_id
      delete:
        method: DELETE
        endpoint: projects/:repo/issues/:issue_id/notes/:note_id
  labels:
    list:
      method: GET
      endpoint: projects/:repo/labels
    create:
      method: POST
      endpoint: projects/:repo/labels
    delete:
      method: DELETE
      endpoint: projects/:repo/labels/:label_id
  prs:
    list:
      method: GET
      endpoint: projects/:repo/merge_requests
    create:
      method: POST
      endpoint: projects/:repo/merge_requests
    update:
      method: PUT
      endpoint: projects/:repo/merge_requests/:merge_request_id
    approve:
      method: POST
      endpoint: projects/:repo/merge_requests/:merge_request_id/approve
    disapprove:
      method: POST
      endpoint: projects/:repo/merge_requests/:merge_request_id/unapprove
    comments:
      list:
        method: GET
        endpoint: projects/:repo/merge_requests/:merge_request_id/notes
      create:
        method: POST
        endpoint: projects/:repo/merge_requests/:merge_request_id/notes
      edit:
        method: PUT
        endpoint: projects/:repo/merge_requests/:merge_request_id/notes/:note_id
      delete:
        method: DELETE
        endpoint: projects/:repo/merge_requests/:merge_request_id/notes/:note_id

gitea:
  version: v1
  base_url: https://gitea.com/api/v1
  issues:
    list:
      method: GET
      endpoint: repos/:repo/issues
    create:
      method: POST
      endpoint: repos/:repo/issues
    update:
      method: PATCH
      endpoint: repos/:repo/issues/:index
    comments:
      list:
        method: GET
        endpoint: repos/:repo/issues/:index/comments
      create:
        method: POST
        endpoint: repos/:repo/issues/:index/comments
      edit:
        method: PATCH
        endpoint: repos/:repo/issues/comments/:comment_id
      delete:
        method: DELETE
        endpoint: repos/:repo/issues/comments/:comment_id
  labels:
    list:
      method: GET
      endpoint: repos/:repo/labels
    create:
      method: POST
      endpoint: repos/:repo/labels
    delete:
      method: DELETE
      endpoint: repos/:repo/labels/:id
  prs:
    list:
      method: GET
      endpoint: repos/:repo/pulls
    create:
      method: POST
      endpoint: repos/:repo/pulls
    update:
      method: PATCH
      endpoint: repos/:repo/pulls/:index
    approve:
      method: POST
      endpoint: repos/:repo/pulls/:index/approve
    disapprove:
      method: DELETE
      endpoint: repos/:repo/pulls/:index/approve
    comments:
      list:
        method: GET
        endpoint: repos/:repo/pulls/:index/comments
      create:
        method: POST
        endpoint: repos/:repo/pulls/:index/comments
      edit:
        method: PATCH
        endpoint: repos/:repo/pulls/comments/:comment_id
      delete:
        method: DELETE
        endpoint: repos/:repo/pulls/comments/:comment_id

bitbucket:
  version: 2.0
  base_url: https://api.bitbucket.org/2.0/repositories
  issues:
    list:
      method: GET
      endpoint: repositories/:repo/issues
    create:
      method: POST
      endpoint: repositories/:repo/issues
    update:
      method: PUT
      endpoint: repositories/:repo/issues/:issue_id
    comments:
      list:
        method: GET
        endpoint: repositories/:repo/issues/:issue_id/comments
      create:
        method: POST
        endpoint: repositories/:repo/issues/:issue_id/comments
      edit:
        method: PUT
        endpoint: repositories/:repo/issues/comments/:comment_id
      delete:
        method: DELETE
        endpoint: repositories/:repo/issues/comments/:comment_id
  labels:
    list:
      method: GET
      endpoint: repositories/:repo/labels
    create:
      method: POST
      endpoint: repositories/:repo/labels
    delete:
      method: DELETE
      endpoint: repositories/:repo/labels/:id
  prs:
    list:
      method: GET
      endpoint: repositories/:repo/pullrequests
    create:
      method: POST
      endpoint: repositories/:repo/pullrequests
    update:
      method: PUT
      endpoint: repositories/:repo/pullrequests/:id
    approve:
      method: POST
      endpoint: repositories/:repo/pullrequests/:id/approve
    disapprove:
      method: DELETE
      endpoint: repositories/:repo/pullrequests/:id/approve
    comments:
      list:
        method: GET
        endpoint: repositories/:repo/pullrequests/:id/comments
      create:
        method: POST
        endpoint: repositories/:repo/pullrequests/:id/comments
      edit:
        method: PUT
        endpoint: repositories/:repo/pullrequests/comments/:comment_id
      delete:
        method: DELETE
        endpoint: repositories/:repo/pullrequests/comments/:comment_id

