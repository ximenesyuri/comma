#! /bin/bash

function _collect_prj(){
    local dir_=${BASH_SOURCE%/*}
    local main_=${dir_%/*}
    source $main_/sh/core/envs.sh
    echo "$(yq e '.projects | keys | .[]'  "$YML_PROJECTS")"    
}

function _comma_compl_prj(){
    declare -A prj_prim_act=(
        ["git"]="add commit amend log diff"
        ["dot"]="."
        ["issue"]="ls new edit close reopen comment"
        ["label"]="ls new edit rm"
        ["pr"]="ls new close reopen merge"
        ["miles"]="ls set new edito rm"
    )
    prj_prim_obj=(${!prj_prim_act[@]})
 
    declare -A prj_sec_act=(
        ["comment"]="new ls rm edit"   )
    prj_sec_obj=(${!prj_sec_act[@]})
 

    if [[ "${prjs[@]}" =~ "$1" ]]; then
        echo "${prj_prim_obj[*]}"
    elif [[ "${prj_prim_obj[@]}" =~ "$1" ]]; then
        echo "${prj_prim_act[$1]}"
    elif [[ "${prj_sec_obj[@]}" =~ "$1" ]]; then
        echo "${prj_sec_act[$1]}"
    fi
}

function _prev(){
    if [[ -z "$1" ]]; then
        echo "${COMP_WORDS[COMP_CWORD-1]}"
    elif [[ $1 -eq 0 ]]; then
        echo "${COMP_WORDS[COMP_CWORD]}"
    elif [[ $1 -gt 0 ]]; then
        echo "${COMP_WORDS[COMP_CWORD-$1]}"
    elif [[ $1 -lt 0 ]]; then
        echo "${COMP_WORDS[COMP_CWORD+$1]}"
    else
        echo "error: wrong entry for 'prev()'"
    fi
}

function _comma_compl() {
    local scopes=("local" "cat" "proj")
    local helps=("-h" "--help") 
    sugg=()
    if [[ $COMP_CWORD -eq 1 ]]; then
        sugg="${scopes[*]} ${helps[*]}"
    elif [[ "proj" =~ "$(_prev 1)" ]]; then
        prjs=($(_collect_prj))
        sugg="${prjs[*]}"
    elif [[ "${prjs[@]}" =~ "$(_prev 1)" ]]; then
        sugg=($(_comma_compl_prj $(_prev 1)))
    elif [[ "${prjs[@]}" =~ "$(_prev 2)" ]]; then
        sugg=($(_comma_compl_prj $(_prev 1)))
    elif [[ "${prjs[@]}" =~ "$(_prev 3)" ]]; then
        sugg=($(_comma_compl_prj $(_prev 1)))
    fi
    COMPREPLY=( $(compgen -W "${sugg[*]}" -- "$(_prev 0)") )
}

complete -F _comma_compl comma

function _,p_compl(){
    prjs=($(_collect_prj))
    sugg=""
    if [[ $COMP_CWORD -eq 1 ]]; then
        sugg="${prjs[*]}"
    elif [[ "${prjs[@]}" =~ "$(_prev 1)" ]]; then
        sugg=($(_comma_compl_prj $(_prev 1)))
    elif [[ "${prjs[@]}" =~ "$(_prev 2)" ]]; then
        sugg=($(_comma_compl_prj $(_prev 1)))
    elif [[ "${prjs[@]}" =~ "$(_prev 3)" ]]; then
        sugg=($(_comma_compl_prj $(_prev 1)))
    fi
    COMPREPLY=( $(compgen -W "${sugg[*]}" -- "$(_prev 0)") )
}

complete -F _,p_compl ,p
complete -F _,p_compl ,
